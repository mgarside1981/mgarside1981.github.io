The goal of this project was to develop a minimum viable product (MVP) that would leverage the Algolia framework to take in an unmanipulated dataset and quickly develop a search module that gives a real-world example of applicability to a business vertical.  When I searched through the sample JSON datasets, I found that the contact.json was generally applicable and that the followers parameter was an interesting path to consider a use case where a person is searching for an influencer to position their product.  The same general framework would work for ratings in the gig economy, followers for a speaker search, and popularity of a product / service.  
The secondary goal was to take an approach that could be mimicked for a live development that translates to business value for a leader or decision maker.  I took this tact because I was learning the platform while constructing the implementation and relied heavily on the out of box (OTB) functionality and the documentation.  The upload was built with a file upload, and the skeleton of the package was built based on the steps and tools highlighted in the getting started page (https://www.algolia.com/doc/guides/building-search-ui/getting-started/js/).  This allows me to take real-time approach that demonstrated value propositions of Time To Value and low administration overhead, in an attempt to secure leadership buy in on the product without a trial or try-and-buy scenario.
The interface natively searches though contact and displays the results based on the follower account.  The included widgets allow the user to restrict by location and follower account to quickly identify the best fit for their project.  Contact information and the website are included to provide all the information needed to confirm the choice and secure contact.
If I were to continue with this project I would want to modify the contact information store.  First, I would like the location information to be stored in a hierarchy, so I could use the hierarchical widget instead to 2 refinement list widgets.  Second, I would want a data set with pictures and additional information around the followers, so I could allow for greater refinement in the search with more widgets.  This could look like social media presence, rating consolidations, areas of focus, or services provided.  Lastly, I would want pictures in the data set, because the scenario is much more convincing if we can see the person to get an emotional investment.
In a real-world scenario, I would want to take this start to embed the product in the customers portal (or a copy) so it feels real.  
The documentation is excellent.  Having an explicit reference to needing an NPX / NPM (I ended up using NodeJS) would assist understanding what is needed to make the instructions work.  The link in the ‘Run your project’ section is wrong (the text is http://localhost:3000 and the url is https://localhost:3000).
